# SKC服务 - JPSKC站点 CentOS Nginx配置
# 此配置文件包含了4个域名的完整配置和SSL设置
# 适用于CentOS系统的Nginx配置

# ===========================================
# 上游服务器定义
# ===========================================
# 定义管理后台API服务
upstream admin_backend {
    server 127.0.0.1:3002;
    keepalive 100;                # 优化：增加keepalive连接数
    keepalive_requests 1000;      # 优化：增加每个连接的请求数
    keepalive_timeout 60s;        # 优化：keepalive超时时间
}

# 定义H5 API服务
upstream h5_backend {
    server 127.0.0.1:3001;
    keepalive 100;                # 优化：增加keepalive连接数
    keepalive_requests 1000;      # 优化：增加每个连接的请求数
    keepalive_timeout 60s;        # 优化：keepalive超时时间
}

# ===========================================
# 速率限制配置
# ===========================================
# 定义请求速率限制区域（优化：大幅提升限流阈值）
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;
limit_req_zone $binary_remote_addr zone=admin_limit:10m rate=50r/s;

# ===========================================
# H5前端域名配置：m.jpskc.com
# ===========================================
server {
    listen 80;
    server_name m.jpskc.com;
    
    # 强制重定向到HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name m.jpskc.com;
    
    # SSL证书配置（Let's Encrypt自动配置）
    ssl_certificate /etc/letsencrypt/live/m.jpskc.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/m.jpskc.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # 安全头配置
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 网站根目录（用于放置H5前端静态文件）
    root /var/www/skc_h5;
    index index.html;
    
    # 静态文件缓存配置
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 默认路由（SPA应用支持）
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # 健康检查
    location /health {
        return 200 "OK";
        add_header Content-Type text/plain;
    }
}

# ===========================================
# H5 API域名配置：api.jpskc.com
# ===========================================
server {
    listen 80;
    server_name api.jpskc.com;
    
    # 强制重定向到HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.jpskc.com;
    
    # SSL证书配置
    ssl_certificate /etc/letsencrypt/live/m.jpskc.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/m.jpskc.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # 安全头配置
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 处理预检请求（CORS由Node.js应用处理）
    location / {
        
        # 应用速率限制（优化：增加突发处理能力）
        limit_req zone=api_limit burst=200 nodelay;
        
        # 代理到H5 API服务
        proxy_pass http://h5_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时设置（优化：减少超时时间，提高响应速度）
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 健康检查
    location /health {
        return 200 "H5 API OK";
        add_header Content-Type text/plain;
    }
}

# ===========================================
# Admin前端域名配置：support.jpskc.com
# ===========================================
server {
    listen 80;
    server_name support.jpskc.com;
    
    # 强制重定向到HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name support.jpskc.com;
    
    # SSL证书配置
    ssl_certificate /etc/letsencrypt/live/m.jpskc.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/m.jpskc.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # 安全头配置
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 网站根目录（用于放置Admin前端静态文件）
    root /var/www/skc_support;
    index index.html;
    
    # 静态文件缓存配置
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 默认路由（SPA应用支持）
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # 健康检查
    location /health {
        return 200 "Admin Frontend OK";
        add_header Content-Type text/plain;
    }
}

# ===========================================
# Admin API域名配置：sapi.jpskc.com
# ===========================================
server {
    listen 80;
    server_name sapi.jpskc.com;
    
    # 强制重定向到HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name sapi.jpskc.com;
    
    # SSL证书配置
    ssl_certificate /etc/letsencrypt/live/m.jpskc.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/m.jpskc.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # 安全头配置
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # API路径代理（CORS由Node.js应用处理）
    location / {
        
        # 应用速率限制（优化：增加管理后台突发处理能力）
        limit_req zone=admin_limit burst=100 nodelay;
        
        # 代理到Admin API服务
        proxy_pass http://admin_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时设置（优化：减少超时时间，提高响应速度）
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 健康检查
    location /health {
        return 200 "Admin API OK";
        add_header Content-Type text/plain;
    }
}

# ===========================================
# 全局配置
# ===========================================
# 隐藏Nginx版本信息
server_tokens off;

# 日志格式配置（使用系统默认的main格式）
# 访问日志
access_log /var/log/nginx/jpskc-access.log;
error_log /var/log/nginx/jpskc-error.log;
